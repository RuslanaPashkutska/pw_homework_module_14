"""Add updated_at to user

Revision ID: 480a8ba52383
Revises: 610a84c8cc59
Create Date: 2025-07-13 12:12:53.072766

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '480a8ba52383'
down_revision: Union[str, Sequence[str], None] = '610a84c8cc59'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('contacts', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('contacts', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('user', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('user', sa.Column('refresh_token', sa.String(length=255), nullable=True))
    op.add_column('user', sa.Column('confirmed', sa.Boolean(), nullable=True))
    op.alter_column('user', 'hashed_password',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.String(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user', 'hashed_password',
               existing_type=sa.String(),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_column('user', 'confirmed')
    op.drop_column('user', 'refresh_token')
    op.drop_column('user', 'updated_at')
    op.drop_column('contacts', 'updated_at')
    op.drop_column('contacts', 'created_at')
    # ### end Alembic commands ###
